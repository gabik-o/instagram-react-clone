{"ast":null,"code":"import { __assign } from \"tslib\";\n/* eslint-disable */\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport useSetState from '../useSetState';\nimport parseTimeRanges from './parseTimeRanges';\nvar createHTMLMediaHook = function (tag) {\n  var hook = function (elOrProps) {\n    var element;\n    var props;\n    if (React.isValidElement(elOrProps)) {\n      element = elOrProps;\n      props = element.props;\n    } else {\n      props = elOrProps;\n    }\n    var _a = useSetState({\n        buffered: [],\n        time: 0,\n        duration: 0,\n        paused: true,\n        muted: false,\n        volume: 1\n      }),\n      state = _a[0],\n      setState = _a[1];\n    var ref = useRef(null);\n    var wrapEvent = function (userEvent, proxyEvent) {\n      return function (event) {\n        try {\n          proxyEvent && proxyEvent(event);\n        } finally {\n          userEvent && userEvent(event);\n        }\n      };\n    };\n    var onPlay = function () {\n      return setState({\n        paused: false\n      });\n    };\n    var onPause = function () {\n      return setState({\n        paused: true\n      });\n    };\n    var onVolumeChange = function () {\n      var el = ref.current;\n      if (!el) {\n        return;\n      }\n      setState({\n        muted: el.muted,\n        volume: el.volume\n      });\n    };\n    var onDurationChange = function () {\n      var el = ref.current;\n      if (!el) {\n        return;\n      }\n      var duration = el.duration,\n        buffered = el.buffered;\n      setState({\n        duration: duration,\n        buffered: parseTimeRanges(buffered)\n      });\n    };\n    var onTimeUpdate = function () {\n      var el = ref.current;\n      if (!el) {\n        return;\n      }\n      setState({\n        time: el.currentTime\n      });\n    };\n    var onProgress = function () {\n      var el = ref.current;\n      if (!el) {\n        return;\n      }\n      setState({\n        buffered: parseTimeRanges(el.buffered)\n      });\n    };\n    if (element) {\n      element = React.cloneElement(element, __assign(__assign({\n        controls: false\n      }, props), {\n        ref: ref,\n        onPlay: wrapEvent(props.onPlay, onPlay),\n        onPause: wrapEvent(props.onPause, onPause),\n        onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange),\n        onDurationChange: wrapEvent(props.onDurationChange, onDurationChange),\n        onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate),\n        onProgress: wrapEvent(props.onProgress, onProgress)\n      }));\n    } else {\n      element = React.createElement(tag, __assign(__assign({\n        controls: false\n      }, props), {\n        ref: ref,\n        onPlay: wrapEvent(props.onPlay, onPlay),\n        onPause: wrapEvent(props.onPause, onPause),\n        onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange),\n        onDurationChange: wrapEvent(props.onDurationChange, onDurationChange),\n        onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate),\n        onProgress: wrapEvent(props.onProgress, onProgress)\n      })); // TODO: fix this typing.\n    }\n    // Some browsers return `Promise` on `.play()` and may throw errors\n    // if one tries to execute another `.play()` or `.pause()` while that\n    // promise is resolving. So we prevent that with this lock.\n    // See: https://bugs.chromium.org/p/chromium/issues/detail?id=593273\n    var lockPlay = false;\n    var controls = {\n      play: function () {\n        var el = ref.current;\n        if (!el) {\n          return undefined;\n        }\n        if (!lockPlay) {\n          var promise = el.play();\n          var isPromise = typeof promise === 'object';\n          if (isPromise) {\n            lockPlay = true;\n            var resetLock = function () {\n              lockPlay = false;\n            };\n            promise.then(resetLock, resetLock);\n          }\n          return promise;\n        }\n        return undefined;\n      },\n      pause: function () {\n        var el = ref.current;\n        if (el && !lockPlay) {\n          return el.pause();\n        }\n      },\n      seek: function (time) {\n        var el = ref.current;\n        if (!el || state.duration === undefined) {\n          return;\n        }\n        time = Math.min(state.duration, Math.max(0, time));\n        el.currentTime = time;\n      },\n      volume: function (volume) {\n        var el = ref.current;\n        if (!el) {\n          return;\n        }\n        volume = Math.min(1, Math.max(0, volume));\n        el.volume = volume;\n        setState({\n          volume: volume\n        });\n      },\n      mute: function () {\n        var el = ref.current;\n        if (!el) {\n          return;\n        }\n        el.muted = true;\n      },\n      unmute: function () {\n        var el = ref.current;\n        if (!el) {\n          return;\n        }\n        el.muted = false;\n      }\n    };\n    useEffect(function () {\n      var el = ref.current;\n      if (!el) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('useAudio() ref to <audio> element is empty at mount. ' + 'It seem you have not rendered the audio element, which is ' + 'returns as the first argument const [audio] = useAudio(...).');\n        }\n        return;\n      }\n      setState({\n        volume: el.volume,\n        muted: el.muted,\n        paused: el.paused\n      });\n      // Start media, if autoPlay requested.\n      if (props.autoPlay && el.paused) {\n        controls.play();\n      }\n    }, [props.src]);\n    return [element, state, controls, ref];\n  };\n  return hook;\n};\nexport default createHTMLMediaHook;","map":{"version":3,"names":["__assign","React","useEffect","useRef","useSetState","parseTimeRanges","createHTMLMediaHook","tag","hook","elOrProps","element","props","isValidElement","_a","buffered","time","duration","paused","muted","volume","state","setState","ref","wrapEvent","userEvent","proxyEvent","event","onPlay","onPause","onVolumeChange","el","current","onDurationChange","onTimeUpdate","currentTime","onProgress","cloneElement","controls","createElement","lockPlay","play","undefined","promise","isPromise","resetLock","then","pause","seek","Math","min","max","mute","unmute","process","env","NODE_ENV","console","error","autoPlay","src"],"sources":["/Users/gabrielokoye/repo/instagram-react-app/node_modules/react-use/esm/util/createHTMLMediaHook.js"],"sourcesContent":["import { __assign } from \"tslib\";\n/* eslint-disable */\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport useSetState from '../useSetState';\nimport parseTimeRanges from './parseTimeRanges';\nvar createHTMLMediaHook = function (tag) {\n    var hook = function (elOrProps) {\n        var element;\n        var props;\n        if (React.isValidElement(elOrProps)) {\n            element = elOrProps;\n            props = element.props;\n        }\n        else {\n            props = elOrProps;\n        }\n        var _a = useSetState({\n            buffered: [],\n            time: 0,\n            duration: 0,\n            paused: true,\n            muted: false,\n            volume: 1,\n        }), state = _a[0], setState = _a[1];\n        var ref = useRef(null);\n        var wrapEvent = function (userEvent, proxyEvent) {\n            return function (event) {\n                try {\n                    proxyEvent && proxyEvent(event);\n                }\n                finally {\n                    userEvent && userEvent(event);\n                }\n            };\n        };\n        var onPlay = function () { return setState({ paused: false }); };\n        var onPause = function () { return setState({ paused: true }); };\n        var onVolumeChange = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            setState({\n                muted: el.muted,\n                volume: el.volume,\n            });\n        };\n        var onDurationChange = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            var duration = el.duration, buffered = el.buffered;\n            setState({\n                duration: duration,\n                buffered: parseTimeRanges(buffered),\n            });\n        };\n        var onTimeUpdate = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            setState({ time: el.currentTime });\n        };\n        var onProgress = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            setState({ buffered: parseTimeRanges(el.buffered) });\n        };\n        if (element) {\n            element = React.cloneElement(element, __assign(__assign({ controls: false }, props), { ref: ref, onPlay: wrapEvent(props.onPlay, onPlay), onPause: wrapEvent(props.onPause, onPause), onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange), onDurationChange: wrapEvent(props.onDurationChange, onDurationChange), onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate), onProgress: wrapEvent(props.onProgress, onProgress) }));\n        }\n        else {\n            element = React.createElement(tag, __assign(__assign({ controls: false }, props), { ref: ref, onPlay: wrapEvent(props.onPlay, onPlay), onPause: wrapEvent(props.onPause, onPause), onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange), onDurationChange: wrapEvent(props.onDurationChange, onDurationChange), onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate), onProgress: wrapEvent(props.onProgress, onProgress) })); // TODO: fix this typing.\n        }\n        // Some browsers return `Promise` on `.play()` and may throw errors\n        // if one tries to execute another `.play()` or `.pause()` while that\n        // promise is resolving. So we prevent that with this lock.\n        // See: https://bugs.chromium.org/p/chromium/issues/detail?id=593273\n        var lockPlay = false;\n        var controls = {\n            play: function () {\n                var el = ref.current;\n                if (!el) {\n                    return undefined;\n                }\n                if (!lockPlay) {\n                    var promise = el.play();\n                    var isPromise = typeof promise === 'object';\n                    if (isPromise) {\n                        lockPlay = true;\n                        var resetLock = function () {\n                            lockPlay = false;\n                        };\n                        promise.then(resetLock, resetLock);\n                    }\n                    return promise;\n                }\n                return undefined;\n            },\n            pause: function () {\n                var el = ref.current;\n                if (el && !lockPlay) {\n                    return el.pause();\n                }\n            },\n            seek: function (time) {\n                var el = ref.current;\n                if (!el || state.duration === undefined) {\n                    return;\n                }\n                time = Math.min(state.duration, Math.max(0, time));\n                el.currentTime = time;\n            },\n            volume: function (volume) {\n                var el = ref.current;\n                if (!el) {\n                    return;\n                }\n                volume = Math.min(1, Math.max(0, volume));\n                el.volume = volume;\n                setState({ volume: volume });\n            },\n            mute: function () {\n                var el = ref.current;\n                if (!el) {\n                    return;\n                }\n                el.muted = true;\n            },\n            unmute: function () {\n                var el = ref.current;\n                if (!el) {\n                    return;\n                }\n                el.muted = false;\n            },\n        };\n        useEffect(function () {\n            var el = ref.current;\n            if (!el) {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error('useAudio() ref to <audio> element is empty at mount. ' +\n                        'It seem you have not rendered the audio element, which is ' +\n                        'returns as the first argument const [audio] = useAudio(...).');\n                }\n                return;\n            }\n            setState({\n                volume: el.volume,\n                muted: el.muted,\n                paused: el.paused,\n            });\n            // Start media, if autoPlay requested.\n            if (props.autoPlay && el.paused) {\n                controls.play();\n            }\n        }, [props.src]);\n        return [element, state, controls, ref];\n    };\n    return hook;\n};\nexport default createHTMLMediaHook;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
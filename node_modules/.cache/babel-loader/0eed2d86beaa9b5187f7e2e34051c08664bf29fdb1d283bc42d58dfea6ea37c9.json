{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = {\n  root: {\n    width: 40,\n    flexShrink: 0\n  },\n  vertical: {\n    width: '100%',\n    height: 40,\n    '& svg': {\n      transform: 'rotate(90deg)'\n    }\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(KeyboardArrowLeft, {\n  fontSize: \"small\"\n});\nvar _ref2 = React.createElement(KeyboardArrowRight, {\n  fontSize: \"small\"\n});\nvar TabScrollButton = React.forwardRef(function TabScrollButton(props, ref) {\n  var classes = props.classes,\n    classNameProp = props.className,\n    direction = props.direction,\n    orientation = props.orientation,\n    visible = props.visible,\n    other = _objectWithoutProperties(props, [\"classes\", \"className\", \"direction\", \"orientation\", \"visible\"]);\n  var className = clsx(classes.root, classNameProp, orientation === 'vertical' && classes.vertical);\n  if (!visible) {\n    return React.createElement(\"div\", {\n      className: className\n    });\n  }\n  return React.createElement(ButtonBase, _extends({\n    component: \"div\",\n    className: className,\n    ref: ref,\n    role: null,\n    tabIndex: null\n  }, other), direction === 'left' ? _ref : _ref2);\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Which direction should the button indicate?\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n  /**\n   * The tabs orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n  /**\n   * Should the button be present or just consume space.\n   */\n  visible: PropTypes.bool.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateTabScrollButton'\n})(TabScrollButton);","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","KeyboardArrowLeft","KeyboardArrowRight","withStyles","ButtonBase","styles","root","width","flexShrink","vertical","height","transform","_ref","createElement","fontSize","_ref2","TabScrollButton","forwardRef","props","ref","classes","classNameProp","className","direction","orientation","visible","other","component","role","tabIndex","process","env","NODE_ENV","propTypes","object","isRequired","string","oneOf","bool","name"],"sources":["/Users/gabrielokoye/repo/instagram-react-app/node_modules/@material-ui/core/esm/Tabs/TabScrollButton.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = {\n  root: {\n    width: 40,\n    flexShrink: 0\n  },\n  vertical: {\n    width: '100%',\n    height: 40,\n    '& svg': {\n      transform: 'rotate(90deg)'\n    }\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(KeyboardArrowLeft, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = React.createElement(KeyboardArrowRight, {\n  fontSize: \"small\"\n});\n\nvar TabScrollButton = React.forwardRef(function TabScrollButton(props, ref) {\n  var classes = props.classes,\n      classNameProp = props.className,\n      direction = props.direction,\n      orientation = props.orientation,\n      visible = props.visible,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"direction\", \"orientation\", \"visible\"]);\n\n  var className = clsx(classes.root, classNameProp, orientation === 'vertical' && classes.vertical);\n\n  if (!visible) {\n    return React.createElement(\"div\", {\n      className: className\n    });\n  }\n\n  return React.createElement(ButtonBase, _extends({\n    component: \"div\",\n    className: className,\n    ref: ref,\n    role: null,\n    tabIndex: null\n  }, other), direction === 'left' ? _ref : _ref2);\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Which direction should the button indicate?\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n\n  /**\n   * Should the button be present or just consume space.\n   */\n  visible: PropTypes.bool.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateTabScrollButton'\n})(TabScrollButton);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
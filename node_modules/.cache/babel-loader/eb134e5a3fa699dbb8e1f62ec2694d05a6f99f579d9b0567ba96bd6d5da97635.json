{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport ownerDocument from '../utils/ownerDocument';\nimport useEventCallback from '../utils/useEventCallback';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport NoSsr from '../NoSsr';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nvar UNCERTAINTY_THRESHOLD = 3; // px\n// We can only have one node at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nvar nodeThatClaimedTheSwipe = null; // Exported for test purposes.\n\nexport function reset() {\n  nodeThatClaimedTheSwipe = null;\n}\nfunction calculateCurrentX(anchor, touches) {\n  return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\nfunction calculateCurrentY(anchor, touches) {\n  return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;\n}\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  var domTreeShapes = [];\n  while (element && element !== rootNode) {\n    var style = window.getComputedStyle(element);\n    if (\n    // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' ||\n    // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      domTreeShapes = [];\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n    element = element.parentElement;\n  }\n  return domTreeShapes;\n}\nfunction findNativeHandler(_ref) {\n  var domTreeShapes = _ref.domTreeShapes,\n    start = _ref.start,\n    current = _ref.current,\n    anchor = _ref.anchor;\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  var axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(function (shape) {\n    // Determine if we are going backward or forward.\n    var goingForward = current >= start;\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n    var axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    var scrollPosition = shape[axisProperties.scrollPosition[axis]];\n    var areNotAtStart = scrollPosition > 0;\n    var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return shape;\n    }\n    return null;\n  });\n}\nvar disableSwipeToOpenDefault = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nvar transitionDurationDefault = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar SwipeableDrawer = React.forwardRef(function SwipeableDrawer(props, ref) {\n  var _props$anchor = props.anchor,\n    anchor = _props$anchor === void 0 ? 'left' : _props$anchor,\n    _props$disableBackdro = props.disableBackdropTransition,\n    disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n    _props$disableDiscove = props.disableDiscovery,\n    disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove,\n    _props$disableSwipeTo = props.disableSwipeToOpen,\n    disableSwipeToOpen = _props$disableSwipeTo === void 0 ? disableSwipeToOpenDefault : _props$disableSwipeTo,\n    hideBackdrop = props.hideBackdrop,\n    _props$hysteresis = props.hysteresis,\n    hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis,\n    _props$minFlingVeloci = props.minFlingVelocity,\n    minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci,\n    _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n  var BackdropProps = _props$ModalProps.BackdropProps,\n    ModalPropsProp = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n    onClose = props.onClose,\n    onOpen = props.onOpen,\n    open = props.open,\n    _props$PaperProps = props.PaperProps,\n    PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n    SwipeAreaProps = props.SwipeAreaProps,\n    _props$swipeAreaWidth = props.swipeAreaWidth,\n    swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth,\n    _props$transitionDura = props.transitionDuration,\n    transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura,\n    _props$variant = props.variant,\n    variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n    other = _objectWithoutProperties(props, [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"]);\n  var theme = useTheme();\n  var _React$useState = React.useState(false),\n    maybeSwiping = _React$useState[0],\n    setMaybeSwiping = _React$useState[1];\n  var swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  var swipeAreaRef = React.useRef();\n  var backdropRef = React.useRef();\n  var paperRef = React.useRef();\n  var touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  var calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(function () {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  var setPosition = React.useCallback(function (translate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$mode = options.mode,\n      mode = _options$mode === void 0 ? null : _options$mode,\n      _options$changeTransi = options.changeTransition,\n      changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;\n    var anchorRtl = getAnchor(theme, anchor);\n    var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    var horizontalSwipe = isHorizontal(anchor);\n    var transform = horizontalSwipe ? \"translate(\".concat(rtlTranslateMultiplier * translate, \"px, 0)\") : \"translate(0, \".concat(rtlTranslateMultiplier * translate, \"px)\");\n    var drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    var transition = '';\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        timeout: transitionDuration\n      }, {\n        mode: mode\n      }));\n    }\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n    if (!disableBackdropTransition && !hideBackdrop) {\n      var backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  var handleBodyTouchEnd = useEventCallback(function (event) {\n    if (!touchDetected.current) {\n      return;\n    }\n    nodeThatClaimedTheSwipe = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n    swipeInstance.current.isSwiping = null;\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontal = isHorizontal(anchor);\n    var current;\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, event.changedTouches);\n    } else {\n      current = calculateCurrentY(anchorRtl, event.changedTouches);\n    }\n    var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    var currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    var translateRatio = currentTranslate / maxTranslate;\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n      return;\n    }\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  var handleBodyTouchMove = useEventCallback(function (event) {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n    if (nodeThatClaimedTheSwipe != null && nodeThatClaimedTheSwipe !== swipeInstance.current) {\n      return;\n    }\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n    if (open && paperRef.current.contains(event.target) && nodeThatClaimedTheSwipe == null) {\n      var domTreeShapes = getDomTreeShapes(event.target, paperRef.current);\n      var nativeHandler = findNativeHandler({\n        domTreeShapes: domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor: anchor\n      });\n      if (nativeHandler) {\n        nodeThatClaimedTheSwipe = nativeHandler;\n        return;\n      }\n      nodeThatClaimedTheSwipe = swipeInstance.current;\n    } // We don't know yet.\n\n    if (swipeInstance.current.isSwiping == null) {\n      var dx = Math.abs(currentX - swipeInstance.current.startX);\n      var dy = Math.abs(currentY - swipeInstance.current.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.\n\n      if (dx > dy) {\n        if (event.cancelable) {\n          event.preventDefault();\n        }\n      }\n      var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(event);\n          return;\n        } // Shift the starting point.\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= swipeAreaWidth;\n          } else {\n            swipeInstance.current.startY -= swipeAreaWidth;\n          }\n        }\n      }\n    }\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n    var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n    var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n    var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    setPosition(translate);\n  });\n  var handleBodyTouchStart = useEventCallback(function (event) {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (event.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n    if (event.muiHandled) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n    if (open && !backdropRef.current.contains(event.target) && !paperRef.current.contains(event.target)) {\n      return;\n    }\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n    if (!open) {\n      if (disableSwipeToOpen || event.target !== swipeAreaRef.current) {\n        return;\n      }\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n    event.muiHandled = true;\n    nodeThatClaimedTheSwipe = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {\n        changeTransition: false\n      });\n    }\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(function () {\n    if (variant === 'temporary') {\n      var doc = ownerDocument(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: false\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return function () {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: false\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n    return undefined;\n  }, [variant, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(function () {\n    return function () {\n      // We need to release the lock.\n      if (nodeThatClaimedTheSwipe === swipeInstance.current) {\n        nodeThatClaimedTheSwipe = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  var handleBackdropRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    backdropRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handlePaperRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    paperRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Drawer, _extends({\n    open: variant === 'temporary' && maybeSwiping ? true : open,\n    variant: variant,\n    ModalProps: _extends({\n      BackdropProps: _extends({}, BackdropProps, {\n        ref: handleBackdropRef\n      })\n    }, ModalPropsProp),\n    PaperProps: _extends({}, PaperProps, {\n      style: _extends({\n        pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n      }, PaperProps.style),\n      ref: handlePaperRef\n    }),\n    anchor: anchor,\n    transitionDuration: calculatedDurationRef.current || transitionDuration,\n    onClose: onClose,\n    ref: ref\n  }, other)), !disableSwipeToOpen && variant === 'temporary' && React.createElement(NoSsr, null, React.createElement(SwipeArea, _extends({\n    anchor: anchor,\n    ref: swipeAreaRef,\n    width: swipeAreaWidth\n  }, SwipeAreaProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes = {\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   */\n  disableBackdropTransition: PropTypes.bool,\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   */\n  disableDiscovery: PropTypes.bool,\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   */\n  disableSwipeToOpen: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Affects how far the drawer must be opened/closed to change his state.\n   * Specified as percent (0-1) of the width of the drawer\n   */\n  hysteresis: PropTypes.number,\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   */\n  minFlingVelocity: PropTypes.number,\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes.shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n  /**\n   * Props applied to the swipe area element.\n   */\n  SwipeAreaProps: PropTypes.object,\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  swipeAreaWidth: PropTypes.number,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","PropTypes","ReactDOM","elementTypeAcceptingRef","Drawer","getAnchor","isHorizontal","ownerDocument","useEventCallback","duration","useTheme","getTransitionProps","NoSsr","SwipeArea","UNCERTAINTY_THRESHOLD","nodeThatClaimedTheSwipe","reset","calculateCurrentX","anchor","touches","document","body","offsetWidth","pageX","calculateCurrentY","window","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","getDomTreeShapes","element","rootNode","domTreeShapes","style","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","push","parentElement","findNativeHandler","_ref","start","current","axisProperties","scrollPosition","x","y","scrollLength","clientLength","some","shape","goingForward","axis","areNotAtStart","areNotAtEnd","disableSwipeToOpenDefault","navigator","test","userAgent","transitionDurationDefault","enter","enteringScreen","exit","leavingScreen","useEnhancedEffect","useLayoutEffect","useEffect","SwipeableDrawer","forwardRef","props","ref","_props$anchor","_props$disableBackdro","disableBackdropTransition","_props$disableDiscove","disableDiscovery","_props$disableSwipeTo","disableSwipeToOpen","hideBackdrop","_props$hysteresis","hysteresis","_props$minFlingVeloci","minFlingVelocity","_props$ModalProps","ModalProps","BackdropProps","ModalPropsProp","onClose","onOpen","_props$PaperProps","PaperProps","SwipeAreaProps","_props$swipeAreaWidth","swipeAreaWidth","_props$transitionDura","transitionDuration","_props$variant","variant","other","theme","_React$useState","useState","maybeSwiping","setMaybeSwiping","swipeInstance","useRef","isSwiping","swipeAreaRef","backdropRef","paperRef","touchDetected","calculatedDurationRef","setPosition","useCallback","translate","options","arguments","length","undefined","_options$mode","mode","_options$changeTransi","changeTransition","anchorRtl","rtlTranslateMultiplier","indexOf","transform","concat","drawerStyle","webkitTransform","transition","transitions","create","timeout","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","event","horizontal","changedTouches","startX","startY","translateRatio","abs","velocity","handleBodyTouchMove","currentX","currentY","contains","target","nativeHandler","dx","dy","cancelable","preventDefault","definitelySwiping","paperHit","lastTranslate","lastTime","performance","now","handleBodyTouchStart","defaultPrevented","muiHandled","doc","addEventListener","passive","removeEventListener","handleBackdropRef","instance","findDOMNode","handlePaperRef","createElement","Fragment","pointerEvents","width","process","env","NODE_ENV","propTypes","oneOf","children","node","bool","number","component","func","isRequired","object","oneOfType"],"sources":["/Users/gabrielokoye/repo/instagram-react-app/node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeableDrawer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport ownerDocument from '../utils/ownerDocument';\nimport useEventCallback from '../utils/useEventCallback';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport NoSsr from '../NoSsr';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nvar UNCERTAINTY_THRESHOLD = 3; // px\n// We can only have one node at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nvar nodeThatClaimedTheSwipe = null; // Exported for test purposes.\n\nexport function reset() {\n  nodeThatClaimedTheSwipe = null;\n}\n\nfunction calculateCurrentX(anchor, touches) {\n  return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches) {\n  return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  var domTreeShapes = [];\n\n  while (element && element !== rootNode) {\n    var style = window.getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      domTreeShapes = [];\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n\nfunction findNativeHandler(_ref) {\n  var domTreeShapes = _ref.domTreeShapes,\n      start = _ref.start,\n      current = _ref.current,\n      anchor = _ref.anchor;\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  var axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(function (shape) {\n    // Determine if we are going backward or forward.\n    var goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    var axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    var scrollPosition = shape[axisProperties.scrollPosition[axis]];\n    var areNotAtStart = scrollPosition > 0;\n    var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return shape;\n    }\n\n    return null;\n  });\n}\n\nvar disableSwipeToOpenDefault = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nvar transitionDurationDefault = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar SwipeableDrawer = React.forwardRef(function SwipeableDrawer(props, ref) {\n  var _props$anchor = props.anchor,\n      anchor = _props$anchor === void 0 ? 'left' : _props$anchor,\n      _props$disableBackdro = props.disableBackdropTransition,\n      disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableDiscove = props.disableDiscovery,\n      disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove,\n      _props$disableSwipeTo = props.disableSwipeToOpen,\n      disableSwipeToOpen = _props$disableSwipeTo === void 0 ? disableSwipeToOpenDefault : _props$disableSwipeTo,\n      hideBackdrop = props.hideBackdrop,\n      _props$hysteresis = props.hysteresis,\n      hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis,\n      _props$minFlingVeloci = props.minFlingVelocity,\n      minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n\n  var BackdropProps = _props$ModalProps.BackdropProps,\n      ModalPropsProp = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SwipeAreaProps = props.SwipeAreaProps,\n      _props$swipeAreaWidth = props.swipeAreaWidth,\n      swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"]);\n\n  var theme = useTheme();\n\n  var _React$useState = React.useState(false),\n      maybeSwiping = _React$useState[0],\n      setMaybeSwiping = _React$useState[1];\n\n  var swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  var swipeAreaRef = React.useRef();\n  var backdropRef = React.useRef();\n  var paperRef = React.useRef();\n  var touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  var calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(function () {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  var setPosition = React.useCallback(function (translate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$mode = options.mode,\n        mode = _options$mode === void 0 ? null : _options$mode,\n        _options$changeTransi = options.changeTransition,\n        changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;\n    var anchorRtl = getAnchor(theme, anchor);\n    var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    var horizontalSwipe = isHorizontal(anchor);\n    var transform = horizontalSwipe ? \"translate(\".concat(rtlTranslateMultiplier * translate, \"px, 0)\") : \"translate(0, \".concat(rtlTranslateMultiplier * translate, \"px)\");\n    var drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    var transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        timeout: transitionDuration\n      }, {\n        mode: mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      var backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  var handleBodyTouchEnd = useEventCallback(function (event) {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    nodeThatClaimedTheSwipe = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontal = isHorizontal(anchor);\n    var current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, event.changedTouches);\n    } else {\n      current = calculateCurrentY(anchorRtl, event.changedTouches);\n    }\n\n    var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    var currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    var translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  var handleBodyTouchMove = useEventCallback(function (event) {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (nodeThatClaimedTheSwipe != null && nodeThatClaimedTheSwipe !== swipeInstance.current) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (open && paperRef.current.contains(event.target) && nodeThatClaimedTheSwipe == null) {\n      var domTreeShapes = getDomTreeShapes(event.target, paperRef.current);\n      var nativeHandler = findNativeHandler({\n        domTreeShapes: domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor: anchor\n      });\n\n      if (nativeHandler) {\n        nodeThatClaimedTheSwipe = nativeHandler;\n        return;\n      }\n\n      nodeThatClaimedTheSwipe = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      var dx = Math.abs(currentX - swipeInstance.current.startX);\n      var dy = Math.abs(currentY - swipeInstance.current.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.\n\n      if (dx > dy) {\n        if (event.cancelable) {\n          event.preventDefault();\n        }\n      }\n\n      var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(event);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= swipeAreaWidth;\n          } else {\n            swipeInstance.current.startY -= swipeAreaWidth;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  var handleBodyTouchStart = useEventCallback(function (event) {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (event.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (event.muiHandled) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && !backdropRef.current.contains(event.target) && !paperRef.current.contains(event.target)) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (!open) {\n      if (disableSwipeToOpen || event.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    event.muiHandled = true;\n    nodeThatClaimedTheSwipe = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(function () {\n    if (variant === 'temporary') {\n      var doc = ownerDocument(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: false\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return function () {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: false\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(function () {\n    return function () {\n      // We need to release the lock.\n      if (nodeThatClaimedTheSwipe === swipeInstance.current) {\n        nodeThatClaimedTheSwipe = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  var handleBackdropRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    backdropRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handlePaperRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    paperRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Drawer, _extends({\n    open: variant === 'temporary' && maybeSwiping ? true : open,\n    variant: variant,\n    ModalProps: _extends({\n      BackdropProps: _extends({}, BackdropProps, {\n        ref: handleBackdropRef\n      })\n    }, ModalPropsProp),\n    PaperProps: _extends({}, PaperProps, {\n      style: _extends({\n        pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n      }, PaperProps.style),\n      ref: handlePaperRef\n    }),\n    anchor: anchor,\n    transitionDuration: calculatedDurationRef.current || transitionDuration,\n    onClose: onClose,\n    ref: ref\n  }, other)), !disableSwipeToOpen && variant === 'temporary' && React.createElement(NoSsr, null, React.createElement(SwipeArea, _extends({\n    anchor: anchor,\n    ref: swipeAreaRef,\n    width: swipeAreaWidth\n  }, SwipeAreaProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes = {\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   */\n  disableBackdropTransition: PropTypes.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   */\n  disableDiscovery: PropTypes.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   */\n  disableSwipeToOpen: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change his state.\n   * Specified as percent (0-1) of the width of the drawer\n   */\n  hysteresis: PropTypes.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   */\n  minFlingVelocity: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes.shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n\n  /**\n   * Props applied to the swipe area element.\n   */\n  SwipeAreaProps: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  swipeAreaWidth: PropTypes.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nimport setRef from '../utils/setRef';\nimport useForkRef from '../utils/useForkRef';\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container; // #StrictMode ready\n\n  return ReactDOM.findDOMNode(container);\n}\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n */\n\nvar Portal = React.forwardRef(function Portal(props, ref) {\n  var children = props.children,\n    container = props.container,\n    _props$disablePortal = props.disablePortal,\n    disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n    onRendered = props.onRendered;\n  var _React$useState = React.useState(null),\n    mountNode = _React$useState[0],\n    setMountNode = _React$useState[1];\n  var handleRef = useForkRef(React.isValidElement(children) ? children.ref : null, ref);\n  useEnhancedEffect(function () {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(function () {\n    if (mountNode && !disablePortal) {\n      setRef(ref, mountNode);\n      return function () {\n        setRef(ref, null);\n      };\n    }\n    return undefined;\n  }, [ref, mountNode, disablePortal]);\n  useEnhancedEffect(function () {\n    if (onRendered && (mountNode || disablePortal)) {\n      onRendered();\n    }\n  }, [onRendered, mountNode, disablePortal]);\n  if (disablePortal) {\n    if (React.isValidElement(children)) {\n      return React.cloneElement(children, {\n        ref: handleRef\n      });\n    }\n    return children;\n  }\n  return mountNode ? ReactDOM.createPortal(children, mountNode) : mountNode;\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n  /**\n   * A node, component instance, or function that returns either.\n   * The `container` will have the portal children appended to it.\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes.oneOfType([PropTypes.func, PropTypes.instanceOf(React.Component), PropTypes.instanceOf(typeof Element === 'undefined' ? Object : Element)]),\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   *\n   * This prop will be deprecated and removed in v5, the ref can be used instead.\n   */\n  onRendered: PropTypes.func\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\nexport default Portal;","map":{"version":3,"names":["React","ReactDOM","PropTypes","exactProp","setRef","useForkRef","getContainer","container","findDOMNode","useEnhancedEffect","window","useLayoutEffect","useEffect","Portal","forwardRef","props","ref","children","_props$disablePortal","disablePortal","onRendered","_React$useState","useState","mountNode","setMountNode","handleRef","isValidElement","document","body","undefined","cloneElement","createPortal","process","env","NODE_ENV","propTypes","node","oneOfType","func","instanceOf","Component","Element","Object","bool"],"sources":["/Users/gabrielokoye/repo/instagram-react-app/node_modules/@material-ui/core/esm/Portal/Portal.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nimport setRef from '../utils/setRef';\nimport useForkRef from '../utils/useForkRef';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container; // #StrictMode ready\n\n  return ReactDOM.findDOMNode(container);\n}\n\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n */\n\nvar Portal = React.forwardRef(function Portal(props, ref) {\n  var children = props.children,\n      container = props.container,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      onRendered = props.onRendered;\n\n  var _React$useState = React.useState(null),\n      mountNode = _React$useState[0],\n      setMountNode = _React$useState[1];\n\n  var handleRef = useForkRef(React.isValidElement(children) ? children.ref : null, ref);\n  useEnhancedEffect(function () {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(function () {\n    if (mountNode && !disablePortal) {\n      setRef(ref, mountNode);\n      return function () {\n        setRef(ref, null);\n      };\n    }\n\n    return undefined;\n  }, [ref, mountNode, disablePortal]);\n  useEnhancedEffect(function () {\n    if (onRendered && (mountNode || disablePortal)) {\n      onRendered();\n    }\n  }, [onRendered, mountNode, disablePortal]);\n\n  if (disablePortal) {\n    if (React.isValidElement(children)) {\n      return React.cloneElement(children, {\n        ref: handleRef\n      });\n    }\n\n    return children;\n  }\n\n  return mountNode ? ReactDOM.createPortal(children, mountNode) : mountNode;\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A node, component instance, or function that returns either.\n   * The `container` will have the portal children appended to it.\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes.oneOfType([PropTypes.func, PropTypes.instanceOf(React.Component), PropTypes.instanceOf(typeof Element === 'undefined' ? Object : Element)]),\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   *\n   * This prop will be deprecated and removed in v5, the ref can be used instead.\n   */\n  onRendered: PropTypes.func\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\n\nexport default Portal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}